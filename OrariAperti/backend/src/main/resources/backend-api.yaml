openapi: 3.0.3
info:
  title: OrariAperti Reservation API
  version: 1.0.0
servers:
  - url: /api/reservation
paths:
  /reservation:
    get:
      summary: Get reservation by public or private key
      parameters:
        - in: header
          name: publicKey
          schema:
            type: string
            format: uuid
          required: false
        - in: header
          name: privateKey
          schema:
            type: string
            format: uuid
          required: false
      responses:
        '200':
          description: Reservation found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ReservationWithKeys'
                  - $ref: '#/components/schemas/ReservationWithPublicKey'
        '400':
          description: Bad request
        '404':
          description: Not found
    post:
      summary: Create a new reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDTO'
      responses:
        '200':
          description: Reservation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationWithKeys'
        '400':
          description: Bad request
  /reservation/{id}:
    delete:
      summary: Delete a reservation by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: privateKey
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Reservation deleted
        '401':
          description: Unauthorized
        '404':
          description: Not found
    put:
      summary: Update a reservation by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: privateKey
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDTO'
      responses:
        '200':
          description: Reservation updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found

components:
  schemas:
    ReservationDTO:
      type: object
      properties:
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        room:
          type: integer
        description:
          type: string
        participants:
          type: string
      required: [date, startTime, endTime, room, description, participants]
    Reservation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        room:
          type: integer
        description:
          type: string
        participants:
          type: string
        privateKey:
          type: string
          format: uuid
        publicKey:
          type: string
          format: uuid
    ReservationWithKeys:
      type: object
      properties:
        reservation:
          $ref: '#/components/schemas/Reservation'
        privateKey:
          type: string
          format: uuid
        publicKey:
          type: string
          format: uuid
    ReservationWithPublicKey:
      type: object
      properties:
        reservation:
          $ref: '#/components/schemas/Reservation'
        publicKey:
          type: string
          format: uuid